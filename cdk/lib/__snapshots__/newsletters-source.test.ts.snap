// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The NewslettersSource stack matches the snapshot 1`] = `
Object {
  "Parameters": Object {
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "newsletterssourcelambdaDC8710B7": Object {
      "DependsOn": Array [
        "newsletterssourcelambdaServiceRoleDefaultPolicy9EC40ED2",
        "newsletterssourcelambdaServiceRole6F6F519E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "DistributionBucketName",
          },
          "S3Key": "newsletters/TEST/newsletters-source/newsletters-source.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "APP": "newsletters-source",
            "STACK": "newsletters",
            "STAGE": "TEST",
          },
        },
        "FunctionName": "newsletters-newsletters-source-TEST",
        "Handler": "cron.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "newsletterssourcelambdaServiceRole6F6F519E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "newsletters-source",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/newsletters",
          },
          Object {
            "Key": "Stack",
            "Value": "newsletters",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "newsletterssourcelambdaServiceRole6F6F519E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "newsletters-source",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/newsletters",
          },
          Object {
            "Key": "Stack",
            "Value": "newsletters",
          },
          Object {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "newsletterssourcelambdaServiceRoleDefaultPolicy9EC40ED2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::aws-frontend-newsletters-source/TEST/*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DistributionBucketName",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/newsletters/newsletters-source",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/newsletters/newsletters-source/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "newsletterssourcelambdaServiceRoleDefaultPolicy9EC40ED2",
        "Roles": Array [
          Object {
            "Ref": "newsletterssourcelambdaServiceRole6F6F519E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "newsletterssourcelambdanewsletterssourcelambdarate5minutes06D3F3388": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "newsletterssourcelambdaDC8710B7",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "newsletterssourcelambdanewsletterssourcelambdarate5minutes0AllowEventRuleNewslettersSourcenewsletterssourcelambda53DBE1F52B364B3C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "newsletterssourcelambdaDC8710B7",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "newsletterssourcelambdanewsletterssourcelambdarate5minutes06D3F3388",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
}
`;
