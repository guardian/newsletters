import { sheets_v4 as sheetsV4 } from 'googleapis';
import { prepareRows } from '../googleNewsletterSheets';

describe('prepare rows', () => {
	it('will replace values in the "preview" column with undefined if they are formatted red and replace empty values for the "theme" column with the last non-empty "theme" from a preview row', () => {
		const expectedResults = [
			[
				'theme for rows 1 and 2',
				'2',
				'3',
				'4',
				'5',
				'6',
				'7',
				'8',
				'9',
				'10',
				'11',
				'12',
				'13',
				'14',
				'15',
				'16',
				'17',
				'18',
				'19',
				'20',
				undefined,
			],
			[
				'theme for rows 1 and 2',
				'2',
				'3',
				'4',
				'5',
				'6',
				'7',
				'8',
				'9',
				'10',
				'11',
				'12',
				'13',
				'14',
				'15',
				'16',
				'17',
				'18',
				'19',
				'20',
				'value for preview column, not formatted in red, should not be filtered out',
			],
			[
				'theme for rows 3 and 4',
				'2',
				'3',
				'4',
				'5',
				'6',
				'7',
				'8',
				'9',
				'10',
				'11',
				'12',
				'13',
				'14',
				'15',
				'16',
				'17',
			],
			[
				'theme for rows 3 and 4',
				'2',
				'3',
				'4',
				'5',
				'6',
				'7',
				'8',
				'9',
				'10',
				'11',
				'12',
				'13',
				'14',
				'15',
				'16',
				'17',
			],
		];
		const rows = [
			[],
			{
				values: [
					{ formattedValue: 'theme for rows 1 and 2' },
					{ formattedValue: '2' },
					{ formattedValue: '3' },
					{ formattedValue: '4' },
					{ formattedValue: '5' },
					{ formattedValue: '6' },
					{ formattedValue: '7' },
					{ formattedValue: '8' },
					{ formattedValue: '9' },
					{ formattedValue: '10' },
					{ formattedValue: '11' },
					{ formattedValue: '12' },
					{ formattedValue: '13' },
					{ formattedValue: '14' },
					{ formattedValue: '15' },
					{ formattedValue: '16' },
					{ formattedValue: '17' },
					{ formattedValue: '18' },
					{ formattedValue: '19' },
					{ formattedValue: '20' },
					{
						formattedValue:
							'value for preview column formatted red, which should be filtered out and replaced with undefined',
						userEnteredFormat: {
							textFormat: { foregroundColor: { red: 1 } },
						},
					},
				],
			} as sheetsV4.Schema$RowData,
			{
				values: [
					{ formattedValue: '' },
					{ formattedValue: '2' },
					{ formattedValue: '3' },
					{ formattedValue: '4' },
					{ formattedValue: '5' },
					{ formattedValue: '6' },
					{ formattedValue: '7' },
					{ formattedValue: '8' },
					{ formattedValue: '9' },
					{ formattedValue: '10' },
					{ formattedValue: '11' },
					{ formattedValue: '12' },
					{ formattedValue: '13' },
					{ formattedValue: '14' },
					{ formattedValue: '15' },
					{ formattedValue: '16' },
					{ formattedValue: '17' },
					{ formattedValue: '18' },
					{ formattedValue: '19' },
					{ formattedValue: '20' },
					{
						formattedValue:
							'value for preview column, not formatted in red, should not be filtered out',
						userEnteredFormat: {
							textFormat: { foregroundColor: { blue: 1 } },
						},
					},
				],
			} as sheetsV4.Schema$RowData,
			{
				values: [
					{ formattedValue: 'theme for rows 3 and 4' },
					{ formattedValue: '2' },
					{ formattedValue: '3' },
					{ formattedValue: '4' },
					{ formattedValue: '5' },
					{ formattedValue: '6' },
					{ formattedValue: '7' },
					{ formattedValue: '8' },
					{ formattedValue: '9' },
					{ formattedValue: '10' },
					{ formattedValue: '11' },
					{ formattedValue: '12' },
					{ formattedValue: '13' },
					{ formattedValue: '14' },
					{ formattedValue: '15' },
					{ formattedValue: '16' },
					{ formattedValue: '17' },
				],
			} as sheetsV4.Schema$RowData,
			{
				values: [
					{ formattedValue: '' },
					{ formattedValue: '2' },
					{ formattedValue: '3' },
					{ formattedValue: '4' },
					{ formattedValue: '5' },
					{ formattedValue: '6' },
					{ formattedValue: '7' },
					{ formattedValue: '8' },
					{ formattedValue: '9' },
					{ formattedValue: '10' },
					{ formattedValue: '11' },
					{ formattedValue: '12' },
					{ formattedValue: '13' },
					{ formattedValue: '14' },
					{ formattedValue: '15' },
					{ formattedValue: '16' },
					{ formattedValue: '17' },
				],
			} as sheetsV4.Schema$RowData,
		] as sheetsV4.Schema$RowData[];
		const got = prepareRows(rows);
		expect(got).toEqual(expectedResults);
	});
});
